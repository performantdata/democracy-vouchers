# Docker Compose configuration for the Democracy Vouchers system

# This is the basic configuration, designed to run the system for local development: in a production-like configuration,
# but without the scaling or restarts.
# (If you need production-level scaling and resilience, use Kubernetes instead.)

name: democracy-vouchers

services:
  # S3-compatible object storage for Grafana services
  grafana-object-storage:
    image: minio/minio
    ports:
    - name: grafana-minio-console
      target: 9001
      host_ip: 127.0.0.1
      published: "9001"
      protocol: tcp
      app_protocol: http
    networks:
    - keycloak
    volumes:
    - type: bind
      source: ../data/minio
      target: /data
    environment:
      MINIO_ROOT_USER: ROOTUSER
      MINIO_ROOT_PASSWORD: CHANGEME123
    command: [ "server", "/data", "--console-address", ":9001" ]
    depends_on:
      keycloak:
        condition: service_started
        required: true

  # AuthN/Z server
  keycloak:
    image: quay.io/keycloak/keycloak
    networks:
    - keycloak
    - postgres
    depends_on:
      postgres:
        condition: service_started
        required: true

  # PostgreSQL database for all services that need it
  postgres:
    image: postgres:16
    shm_size: 128mb
    volumes:
    - type: volume
      source: postgres-data
      target: /var/lib/postgresql/data
      volume:
        nocopy: true
    ports:
    - target: 5432
      host_ip: 127.0.0.1
      published: "5432"
      protocol: tcp
    networks:
    - postgres
    configs:
    - source: postgres
      target: /docker-entrypoint-initdb.d/init-dbs.sh
    environment:
      POSTGRES_PASSWORD: postgres

configs:
  postgres:
    file: postgres/init-dbs.sh

volumes:
  postgres-data:

networks:
  keycloak:
    labels:
      description: Network for access to the KeyCloak service.
  postgres:
    labels:
      description: Network for access to the PostgreSQL database.
